rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isSignedIn() {
      return request.auth != null;
    }

    // Users collection
    match /users/{userId} {
      // Allow read for authenticated users
      allow read: if isSignedIn();
      
      // Allow write operations for authenticated users
      allow write: if isSignedIn();
    }

    // Chat rooms collection
    match /chatRooms/{chatId} {
      // Allow read if user is a participant
      allow read: if isSignedIn() && 
        (resource == null || request.auth.uid in resource.data.participants);
      
      // Allow create if user will be a participant
      allow create: if isSignedIn() && 
        request.resource.data.participants.hasAll([request.auth.uid]);
      
      // Allow update if user is a participant
      allow update: if isSignedIn() && 
        request.auth.uid in resource.data.participants;

      // Messages subcollection
      match /messages/{messageId} {
        // Allow read if user is a participant in the chat room
        allow read: if isSignedIn() && 
          request.auth.uid in get(/databases/$(database)/documents/chatRooms/$(chatId)).data.participants;
        
        // Allow create if user is a participant and is the sender
        allow create: if isSignedIn() && 
          request.auth.uid in get(/databases/$(database)/documents/chatRooms/$(chatId)).data.participants &&
          request.resource.data.senderId == request.auth.uid;
        
        // Allow update for read status if user is a participant
        allow update: if isSignedIn() && 
          request.auth.uid in get(/databases/$(database)/documents/chatRooms/$(chatId)).data.participants;
      }
    }
  }
}
